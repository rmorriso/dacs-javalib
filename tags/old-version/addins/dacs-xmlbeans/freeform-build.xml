<?xml version='1.0'?>
<project name="dacs-xmlbeans" default="jar" basedir=".">

  <description>Builds, tests, and runs the project dacs-xmlbeans.</description>

  <!-- set local/global properties for this build -->
 
  <property file="./freeform.properties"/>
  <property file="../project.properties"/>

  <property name="dacs-version" value="1.4.x"/>

  <target name="init" depends="-init-check">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build.dir}" />
    <!-- Create the directory for the jar file -->
    <mkdir dir="${dist.dir}" />
    <!-- Create the directory for the java docs -->
    <mkdir dir="${dist.javadoc.dir}" />
  </target>

  <target name="compile-test" depends="jar">
    <!-- copy all .java files from ${test.src.dir} to ${build.test.classes.dir}  -->
    <copy todir="${build.test.classes.dir}/">
      <fileset dir="${test.src.dir}" includes="**/*.java"/>
    </copy>
    <!-- run javac to compile the source files -->
    <javac srcdir="${test.src.dir}" destdir="${build.test.classes.dir}">
      <classpath>
        <!-- use value of ${javac.test.classpath} property in the classpath -->
        <pathelement path="${javac.test.classpath}"/>
        <!-- include all jar files  -->
        <fileset dir="${lib.dir}">
           <include name="**/*.jar"/>
        </fileset>
      </classpath>
      <compilerarg line="${javac.compilerargs}"/>
    </javac>
  </target>

  <target name="jar" depends="init">
     <delete dir="${libsrc.dir}" />
     <mkdir dir="${libsrc.dir}" />
     <taskdef name="xmlbean" classname="org.apache.xmlbeans.impl.tool.XMLBean"
         classpath="${javac.classpath}"/>
     <xmlbean schema="dtd-xsd" destfile="lib/dacs-xmlbeans.jar"
         classpath="${javac.classpath}"
         javasource="1.5" srcgendir="${libsrc.dir}" failonerror="true"/>
  </target>

  <target name="test" depends="compile-test">
    <mkdir dir="${build.test.results.dir}" />

    <junit printsummary="yes" haltonfailure="yes">
      <classpath>
        <pathelement location="${build.test.classes.dir}"/>
        <pathelement path="${javac.test.classpath}"/>
      </classpath>

      <formatter type="plain"/>

      <batchtest fork="yes" todir="${build.test.results.dir}">
        <fileset dir="${test.src.dir}">
          <include name="**/*Test*.java"/>
          <exclude name="**/AllTests.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="javadocs" depends="jar">
    <!-- create javadocs -->
    <javadoc destdir="${dist.javadoc.dir}"
           author="true"
           version="true"
           use="true">
      <classpath>
        <path path="${javac.classpath}"/>
      </classpath>
      <sourcepath>
        <pathelement location="${libsrc.dir}"/>
      </sourcepath>
      <fileset dir="${libsrc.dir}" defaultexcludes="yes">
        <include name="**/*.java"/>
      </fileset>
      <doctitle>
        <![CDATA[<h1>DACS Java Library ${javalib-version}: xmlbeans</h1>]]>
      </doctitle>
      <bottom>
        <![CDATA[<i>Copyright &#169; 2005-2006 Metalogic Software Corporation All Rights Reserved.</i>]]>
      </bottom>
    </javadoc>
  </target>

  <target name="clean">
    <!-- Delete the ${build.dir} and ${dist.dir} directory trees -->
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${libsrc.dir}" />
  </target>

  <target name="-init-check">
    <fail unless="libsrc.dir">Must set libsrc.dir</fail>
    <fail unless="test.src.dir">Must set test.src.dir</fail>
    <fail unless="build.dir">Must set build.dir</fail>
    <fail unless="dist.dir">Must set dist.dir</fail>
    <fail unless="build.classes.dir">Must set build.classes.dir</fail>
    <fail unless="dist.javadoc.dir">Must set dist.javadoc.dir</fail>
    <fail unless="build.test.classes.dir">Must set build.test.classes.dir</fail>
    <fail unless="build.test.results.dir">Must set build.test.results.dir</fail>
    <fail unless="build.classes.excludes">Must set build.classes.excludes</fail>
    <fail unless="dist.war">Must set dist.war</fail>
  </target>

</project>

